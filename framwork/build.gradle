apply plugin: 'com.android.library'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    testCompile 'junit:junit:4.12'
    testCompile 'com.google.truth:truth:0.31'
    testCompile 'org.robolectric:robolectric:3.1.2'
    // Android开发人员应该收集以下工具
    // https://github.com/Blankj/AndroidUtilCode
    //compile 'com.blankj:utilcode:1.6.4'
    // EventBus是为Android优化的发布/订阅事件总线
    // https://github.com/greenrobot/EventBus
    // http://www.jianshu.com/p/31e3528ca7e5    EventBus3.0详解
    compile 'org.greenrobot:eventbus:3.0.0'
    // 功能强大的Fragment管理
    // https://github.com/YoKeyword/Fragmentation
    // 如果想使用SwipeBack 滑动边缘退出Fragment/Activity功能，请再添加库:fragmentation-swipeback
    compile 'me.yokeyword:fragmentation:0.10.6'
    compile 'me.yokeyword:fragmentation-swipeback:0.10.4'

    //glide
    compile 'com.github.bumptech.glide:glide:4.0.0-RC0'
    //compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    //rx
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //rxbinding
    //compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    //compile 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.0.0'
    //rxpermissions
    //compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.2@aar'
    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.8.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
}
